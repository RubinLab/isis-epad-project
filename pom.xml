<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
				 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <properties>

    <dcm4chee.version>2.0.28</dcm4chee.version> 
    <servlet.api.version>2.5</servlet.api.version>
    <!-- Version 8.+ of Jetty uses version 3+ of javax.servlet which can cause problems with the version 2.5 that appears to be needed by Restlets -->
    <jetty.version>7.6.5.v20120716</jetty.version>

    <gwt.version>2.6.1</gwt.version>
    <totoe.version>0.7</totoe.version>
    <gwtquery.version>1.4.2</gwtquery.version>

    <!-- No public Maven repository for gwtdom, raphael, gchart so are in local repository in epad project. -->
    <gwtdom.version>1.0.8</gwtdom.version>
    <raphael.gwt.version>r42</raphael.gwt.version> <!-- r42 corresponds to Raphael release number. -->
    <gchart.version>2.7</gchart.version> 

    <!-- No public Maven repository for Pixelmed so in local repository in epad-common project. -->
    <pixelmed.version>20160907</pixelmed.version> 

    <aimapi.version>1.0</aimapi.version> 
   <aim3api.version>1.0</aim3api.version>   <!--   TODO Get rid of after move to AIM 4 API -->

    <restlet.version>2.1.3</restlet.version>

    <commons.httpclient.version>3.1</commons.httpclient.version>
    <commons.fileupload.version>1.2.2</commons.fileupload.version>
    <commons.cli.version>1.2</commons.cli.version>
    <commons.io.version>1.4</commons.io.version>
    <commons.codec.version>1.7</commons.codec.version>
    <commons.net.version>2.0</commons.net.version>

    <apache.httpclient.version>4.4.1</apache.httpclient.version>
    <apache.httpcore.version>4.4.1</apache.httpcore.version> <!-- Using 4.2.3 caused a class compatability issue with Restlets -->
    <apache.httpmime.version>4.2.3</apache.httpmime.version>

    <imagej.version>1.47</imagej.version>
    <jai.imageio.version>1.1</jai.imageio.version>

    <log4j.version>1.2.17</log4j.version>
    <slf4j.version>1.6.1</slf4j.version>
    <junit.version>3.8.1</junit.version>

    <mysql.connector.version>5.1.37</mysql.connector.version> <!-- Needed for preventing database deadlock problem -->
    <gson.version>2.2.1</gson.version>
	<hsqldb.version>1.8.0.7</hsqldb.version>
	<mongodb.version>2.13.0</mongodb.version>
	<javamail.version>1.5.1</javamail.version>
	<json.version>20140107</json.version>
	<bcrypt.version>0.3m</bcrypt.version>

    <!-- For the moment we give plugins the same version number as the overall ePAD project, though they could be versioned independently. -->
    <!-- Plugins may require different versions of MATLAB so we specify this here. -->
    <!-- Version R2013b of MATLAB  will require a Java 7 runtime on the deployment machine. -->
	
	<!-- <vanderbilt.plugin.version>1.1</vanderbilt.plugin.version>
    <matlab.release.number.vanderbilt>R2013b</matlab.release.number.vanderbilt>  -->

    <tedseg.plugin.version>1.1</tedseg.plugin.version>
    <matlab.release.number.tedseg>R2016b</matlab.release.number.tedseg> 

    <riesz.plugin.version>1.1</riesz.plugin.version>
    <matlab.release.number.riesz>R2016b</matlab.release.number.riesz> 

    <sampleplugin.plugin.version>1.1</sampleplugin.plugin.version>
    <matlab.release.number.sampleplugin>R2016b</matlab.release.number.sampleplugin> 

    <jjvector.plugin.version>1.1</jjvector.plugin.version> 
    <matlab.release.number.jjvector>R2016b</matlab.release.number.jjvector> 
    
	<lesionseg.plugin.version>1.1</lesionseg.plugin.version> 
    <matlab.release.number.lesionseg>R2016b</matlab.release.number.lesionseg> 

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <organization> 
    <name>RubinLab</name> 
    <url>epad.stanford.edu</url>
  </organization>

  <groupId>edu.stanford.epad</groupId>
  <artifactId>epad-project</artifactId>
  <packaging>pom</packaging>
  <version>1.1</version>
  <name>ePAD Project</name>
  <url>http://epad.stanford.edu/</url>

  <repositories>

    <repository>
      <id>maven-restlet</id>
      <name>Public online Restlet repository</name>
      <url>http://maven.restlet.org</url>
    </repository>

    <repository>
      <id>dcm4che</id>
      <name>DCM4CHE Maven Repository</name>
      <url>http://www.dcm4che.org/maven2/</url>
    </repository>
    <repository>
        <id>com.springsource.repository.bundles.external</id>
        <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
        <url>http://repository.springsource.com/maven/bundles/external</url>
    </repository>
    
    <!-- Use repository in ${project.basedir}/lib for JARs that can not be found in public Maven repositories. -->
    <!-- Each project ./lib directory should contain dependencies that may be used by that project. -->
    <!-- See: http://blog.dub.podval.org/2010/01/maven-in-project-repository.html -->
    <!-- May ultimately use a local Nexus server or the like for some of these dependencies. -->
    <repository>
      <id>lib</id>
      <name>lib</name>
      <releases>
        <enabled>true</enabled>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <url>file://${project.basedir}/lib</url>
    </repository>

  </repositories>
  
  <modules>
  <!--  >module>../aim3api</module --> <!--  TODO Get rid of after move to AIM 4 API -->
    <module>../aimapi</module> 
    <module>../epad-common</module>
    <module>../epad-dto</module>
    <module>../epad-plugins</module>
    <module>../epad-ws</module>

    <module>../lesion-tracking</module>
    <!--  <module>../BIMM</module>  -->

    <module>../epad</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>

				<plugin>
          <artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
				</plugin>

      </plugins>
    </pluginManagement>
  </build>

  <!-- TODO Add a <dependencyManagement> section and modify child POMs appropriately -->

  <dependencies>

    <dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    
    <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    
    <dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
  
</project>
